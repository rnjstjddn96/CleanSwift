//
//  MainInteractor.swift
//  CleanArchitecture
//
//  Created by imform-mm-2101 on 2021/07/06.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func reqeustTodos(request: Main.TodoList.Request)
}

protocol MainDataStore {
    var todos: [TestModel] { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentationLogic?
    var worker: MainWorker?
    var todos: [TestModel] = []
    
    // MARK: Do something
    func reqeustTodos(request: Main.TodoList.Request) {
        worker = MainWorker()
        
        worker?.getTodos(onComplete: { [weak self] result in
            guard let self = self else { return }
            let response = Main.TodoList.Response(result: result)
            self.todos = response.result
            self.presenter?.presentTodos(response: response)
        }, onError: { [weak self] error in
            guard let self = self else { return }
            self.presenter?.presentError(
                response: Main.TodoList.Response(result: [], error: error)
            )
        })
    }
}
